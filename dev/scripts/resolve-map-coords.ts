#!/usr/bin/env ts-node

/* eslint-disable no-console */

/**
 * Google Maps Coordinate Resolver
 * 
 * ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Google share link ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£
 * 
 * ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:
 * npm run resolve:map
 * 
 * ‡∏´‡∏£‡∏∑‡∏≠:
 * ts-node dev/scripts/resolve-map-coords.ts
 */

import * as fs from 'fs';
import * as path from 'path';
import { execSync } from 'child_process';

// ‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô
const GOOGLE_SHARE_URL = 'https://share.google/UuNOeZP6G9wOiPeui';
const CONFIG_DIR = path.resolve(process.cwd(), 'config');
const LOCATION_CONFIG_PATH = path.join(CONFIG_DIR, 'site-location.json');

// Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
interface SiteLocation {
  lat: number;
  lng: number;
  source: string;
  updated?: string;
  original_url?: string;
}

// ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå
const DEFAULT_LOCATION: SiteLocation = {
  lat: 0,
  lng: 0,
  source: 'unset'
};

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ config ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
 */
function ensureConfigDirectory(): void {
  if (!fs.existsSync(CONFIG_DIR)) {
    fs.mkdirSync(CONFIG_DIR, { recursive: true });
    // eslint-disable-next-line no-console
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ: ${CONFIG_DIR}`);
  }
}

/**
 * ‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
 */
function readCurrentLocation(): SiteLocation {
  if (fs.existsSync(LOCATION_CONFIG_PATH)) {
    try {
      const content = fs.readFileSync(LOCATION_CONFIG_PATH, 'utf8');
      const location = JSON.parse(content) as SiteLocation;
      // eslint-disable-next-line no-console
      console.log(`üìç ‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: lat=${location.lat}, lng=${location.lng}, source=${location.source}`);
      return location;
    } catch (error) {
      console.warn(`‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå ${LOCATION_CONFIG_PATH}: ${error}`);
      return DEFAULT_LOCATION;
    }
  }
  
  // eslint-disable-next-line no-console
  console.log('üìÇ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô');
  return DEFAULT_LOCATION;
}

/**
 * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
 */
function saveLocation(location: SiteLocation): void {
  try {
    const content = JSON.stringify(location, null, 2);
    fs.writeFileSync(LOCATION_CONFIG_PATH, content, 'utf8');
    // eslint-disable-next-line no-console
    console.log(`üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà: ${LOCATION_CONFIG_PATH}`);
    // eslint-disable-next-line no-console
    console.log(`   lat: ${location.lat}`);
    // eslint-disable-next-line no-console
    console.log(`   lng: ${location.lng}`);
    // eslint-disable-next-line no-console
    console.log(`   source: ${location.source}`);
  } catch (error) {
    console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå: ${error}`);
    throw error;
  }
}

/**
 * ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° URL redirect ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ curl
 */
function followRedirects(url: string): string {
  try {
    console.log(`üîç ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° redirect ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${url}`);
    
    // ‡πÉ‡∏ä‡πâ curl ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° redirects ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á final URL
    const command = `curl -s -L -I -o nul -w "%{url_effective}" "${url}"`;
    
    const finalUrl = execSync(command, { 
      encoding: 'utf8',
      timeout: 10000,
      stdio: ['pipe', 'pipe', 'pipe']
    }).trim();
    
    console.log(`üéØ URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á: ${finalUrl}`);
    return finalUrl;
    
  } catch (error) {
    console.error(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° URL: ${error}`);
    throw error;
  }
}

/**
 * ‡πÅ‡∏¢‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å Google Maps URL
 */
function extractCoordinates(url: string): { lat: number; lng: number } | null {
  console.log(`üß≠ ‡πÅ‡∏¢‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å URL: ${url}`);
  
  // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö 1: @LAT,LNG,ZOOM (‡πÄ‡∏ä‡πà‡∏ô @18.790123,98.985432,17z)
  const pattern1 = /@(-?\d+\.?\d*),(-?\d+\.?\d*),\d+/;
  const match1 = url.match(pattern1);
  
  if (match1 && match1[1] && match1[2]) {
    const lat = parseFloat(match1[1]);
    const lng = parseFloat(match1[2]);
    // eslint-disable-next-line no-console
    console.log(`‚úÖ ‡∏û‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö @lat,lng: ${lat}, ${lng}`);
    return { lat, lng };
  }
  
  // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö 2: !3dLAT!4dLNG (‡πÄ‡∏ä‡πà‡∏ô !3d18.790123!4d98.985432)
  const pattern2 = /!3d(-?\d+\.?\d*)!4d(-?\d+\.?\d*)/;
  const match2 = url.match(pattern2);
  
  if (match2 && match2[1] && match2[2]) {
    const lat = parseFloat(match2[1]);
    const lng = parseFloat(match2[2]);
    // eslint-disable-next-line no-console
    console.log(`‚úÖ ‡∏û‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö !3d!4d: ${lat}, ${lng}`);
    return { lat, lng };
  }
  
  // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö 3: /place/.../@LAT,LNG
  const pattern3 = /\/place\/[^\/]*\/@(-?\d+\.?\d*),(-?\d+\.?\d*)/;
  const match3 = url.match(pattern3);
  
  if (match3 && match3[1] && match3[2]) {
    const lat = parseFloat(match3[1]);
    const lng = parseFloat(match3[2]);
    // eslint-disable-next-line no-console
    console.log(`‚úÖ ‡∏û‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö place/@: ${lat}, ${lng}`);
    return { lat, lng };
  }
  
  console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÉ‡∏ô URL`);
  return null;
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î
 */
function validateCoordinates(lat: number, lng: number): boolean {
  const isValidLat = lat >= -90 && lat <= 90;
  const isValidLng = lng >= -180 && lng <= 180;
  
  if (!isValidLat) {
    console.error(`‚ùå Latitude ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${lat} (‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á -90 ‡∏ñ‡∏∂‡∏á 90)`);
  }
  
  if (!isValidLng) {
    console.error(`‚ùå Longitude ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${lng} (‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á -180 ‡∏ñ‡∏∂‡∏á 180)`);
  }
  
  return isValidLat && isValidLng;
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
 */
async function main(): Promise<void> {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà...\n');
  
  try {
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ config
    ensureConfigDirectory();
    
    // 2. ‡∏≠‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const currentLocation = readCurrentLocation();
    
    // 3. ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° Google share URL
    let finalUrl: string;
    try {
      finalUrl = followRedirects(GOOGLE_SHARE_URL);
    } catch (error) {
      console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° URL ‡πÑ‡∏î‡πâ: ${error}`);
      console.log(`‚ö†Ô∏è  ‡∏Ñ‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ`);
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
      if (!fs.existsSync(LOCATION_CONFIG_PATH)) {
        saveLocation(currentLocation);
      }
      return;
    }
    
    // 4. ‡πÅ‡∏¢‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î
    const coordinates = extractCoordinates(finalUrl);
    
    if (!coordinates) {
      console.log(`‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÉ‡∏ô URL - ‡∏Ñ‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ`);
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
      if (!fs.existsSync(LOCATION_CONFIG_PATH)) {
        saveLocation(currentLocation);
      }
      return;
    }
    
    // 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (!validateCoordinates(coordinates.lat, coordinates.lng)) {
      console.error(`‚ùå ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡∏Ñ‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ`);
      return;
    }
    
    // 6. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà
    const newLocation: SiteLocation = {
      lat: coordinates.lat,
      lng: coordinates.lng,
      source: 'share.google',
      updated: new Date().toISOString(),
      original_url: GOOGLE_SHARE_URL
    };
    
    // 7. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const hasChanged = 
      Math.abs(currentLocation.lat - newLocation.lat) > 0.0001 ||
      Math.abs(currentLocation.lng - newLocation.lng) > 0.0001;
    
    if (hasChanged) {
      console.log(`üîÑ ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á:`);
      console.log(`   ‡πÄ‡∏Å‡πà‡∏≤: lat=${currentLocation.lat}, lng=${currentLocation.lng}`);
      console.log(`   ‡πÉ‡∏´‡∏°‡πà: lat=${newLocation.lat}, lng=${newLocation.lng}`);
      
      // 8. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà
      saveLocation(newLocation);
      
      console.log(`\n‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
      console.log(`üìç ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà: ${newLocation.lat}, ${newLocation.lng}`);
    } else {
      console.log(`‚úÖ ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
      
      // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• source ‡πÅ‡∏•‡∏∞ updated ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
      const updatedLocation = {
        ...currentLocation,
        source: 'share.google',
        updated: new Date().toISOString(),
        original_url: GOOGLE_SHARE_URL
      };
      saveLocation(updatedLocation);
    }
    
  } catch (error) {
    console.error(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error}`);
    process.exit(1);
  }
}

// ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå
if (require.main === module) {
  main().catch(error => {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á:', error);
    process.exit(1);
  });
}
