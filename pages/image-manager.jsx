import React, { useState, useCallback } from 'react';
import dynamic from 'next/dynamic';
import SEO from '../components/SEO';

// Dynamic import ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô SSR issues
const ImageManager = dynamic(() => Promise.resolve(ImageManagerComponent), { ssr: false });

function ImageManagerComponent() {
  const [uploadStatus, setUploadStatus] = useState('');
  const [processing, setProcessing] = useState(false);
  const [results, setResults] = useState(null);
  const [batchProcessing, setBatchProcessing] = useState(false);

  // Upload ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
  const handleImageUpload = useCallback(async event => {
    const file = event.target.files[0];
    if (!file) return;

    setProcessing(true);
    setUploadStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ...');

    const formData = new FormData();
    formData.append('image', file);
    formData.append('quality', '85');
    formData.append('responsive', 'true');
    formData.append('context', 'car');

    try {
      const response = await fetch('/api/upload-image', {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();

      if (result.success) {
        setUploadStatus('‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        setResults(result.data);
      } else {
        setUploadStatus(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${result.error}`);
      }
    } catch (error) {
      setUploadStatus(`‚ùå ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${error.message}`);
    } finally {
      setProcessing(false);
    }
  }, []);

  // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
  const handleBatchProcess = useCallback(async () => {
    setBatchProcessing(true);
    setUploadStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');

    try {
      const response = await fetch('/api/process-images', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${process.env.NEXT_PUBLIC_IMAGE_PROCESS_TOKEN || 'demo-token'}`,
        },
        body: JSON.stringify({
          directory: 'public',
          recursive: true,
          deleteOriginals: false,
          generateResponsive: true,
          quality: 85,
          context: 'car',
        }),
      });

      const result = await response.json();

      if (result.data?.success) {
        setUploadStatus(`‚úÖ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡πÅ‡∏õ‡∏•‡∏á ${result.data.processed} ‡πÑ‡∏ü‡∏•‡πå`);
        setResults(result.data);
      } else {
        setUploadStatus(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${result.error}`);
      }
    } catch (error) {
      setUploadStatus(`‚ùå ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${error.message}`);
    } finally {
      setBatchProcessing(false);
    }
  }, []);

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className="bg-white rounded-2xl shadow-lg border border-gray-200 p-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-8 font-prompt">
          üñºÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        </h1>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Upload Section */}
          <div className="bg-gray-50 rounded-xl p-6">
            <h2 className="text-xl font-bold text-gray-900 mb-4 font-prompt">üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà</h2>
            <div className="space-y-4">
              <div className="flex items-center justify-center w-full">
                <label
                  htmlFor="dropzone-file"
                  className="flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100 transition-colors"
                >
                  <div className="flex flex-col items-center justify-center pt-5 pb-6">
                    <svg
                      className="w-8 h-8 mb-4 text-gray-500"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 20 16"
                    >
                      <path
                        stroke="currentColor"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="2"
                        d="M13 13h3a3 3 0 0 0 0-6h-.025A5.56 5.56 0 0 0 16 6.5 5.5 5.5 0 0 0 5.207 5.021C5.137 5.017 5.071 5 5 5a4 4 0 0 0 0 8h2.167M10 15V6m0 0L8 8m2-2 2 2"
                      />
                    </svg>
                    <p className="mb-2 text-sm text-gray-500 font-prompt">
                      <span className="font-semibold">‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå</span> ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏á
                    </p>
                    <p className="text-xs text-gray-500 font-prompt">PNG, JPG, JPEG (MAX. 10MB)</p>
                  </div>
                  <input
                    id="dropzone-file"
                    type="file"
                    className="hidden"
                    accept="image/*"
                    onChange={handleImageUpload}
                    disabled={processing}
                  />
                </label>
              </div>

              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h3 className="font-semibold text-blue-900 mb-2 font-prompt">‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥:</h3>
                <ul className="text-sm text-blue-800 space-y-1 font-prompt">
                  <li>‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô WebP ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
                  <li>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ (Responsive)</li>
                  <li>‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û (85%)</li>
                  <li>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Alt Text ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
                  <li>‚úÖ ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡∏∂‡∏á 70%</li>
                </ul>
              </div>
            </div>
          </div>

          {/* Batch Processing Section */}
          <div className="bg-gray-50 rounded-xl p-6">
            <h2 className="text-xl font-bold text-gray-900 mb-4 font-prompt">
              ‚ö° ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            </h2>
            <div className="space-y-4">
              <p className="text-gray-600 font-prompt">
                ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå public ‡πÄ‡∏õ‡πá‡∏ô WebP ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö responsive
              </p>

              <button
                onClick={handleBatchProcess}
                disabled={batchProcessing}
                className="w-full bg-primary hover:bg-primary-600 text-white font-bold py-3 px-6 rounded-lg transition-colors disabled:bg-gray-400 font-prompt"
              >
                {batchProcessing ? 'üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•...' : 'üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•'}
              </button>

              <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
                <h3 className="font-semibold text-amber-900 mb-2 font-prompt">‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:</h3>
                <ul className="text-sm text-amber-800 space-y-1 font-prompt">
                  <li>‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô</li>
                  <li>‚ö†Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>
                  <li>‚ö†Ô∏è ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        {/* Status Section */}
        {uploadStatus && (
          <div className="mt-8">
            <div
              className={`p-4 rounded-lg font-prompt ${
                uploadStatus.includes('‚úÖ')
                  ? 'bg-green-50 border border-green-200 text-green-800'
                  : uploadStatus.includes('‚ùå')
                    ? 'bg-red-50 border border-red-200 text-red-800'
                    : 'bg-blue-50 border border-blue-200 text-blue-800'
              }`}
            >
              {uploadStatus}
            </div>
          </div>
        )}

        {/* Results Section */}
        {results && (
          <div className="mt-8 bg-gray-50 rounded-xl p-6">
            <h3 className="text-lg font-bold text-gray-900 mb-4 font-prompt">üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</h3>

            {results.converted && results.converted.length > 0 && (
              <div className="mb-4">
                <h4 className="font-semibold text-gray-800 mb-2 font-prompt">‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß:</h4>
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                  {results.converted.map((item, index) => (
                    <div key={index} className="bg-white p-3 rounded-lg border">
                      <p className="text-sm font-medium text-gray-900 font-prompt">
                        {item.url ? `üìÅ ${item.url}` : `üìÅ ${item.webp || item.original}`}
                      </p>
                      {item.width && (
                        <p className="text-xs text-gray-600 font-prompt">üìê ‡∏Ç‡∏ô‡∏≤‡∏î: {item.width}px</p>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}

            {results.altText && (
              <div className="mb-4">
                <h4 className="font-semibold text-gray-800 mb-2 font-prompt">Alt Text:</h4>
                <p className="text-sm text-gray-600 bg-white p-3 rounded-lg border font-prompt">
                  {results.altText}
                </p>
              </div>
            )}

            {results.processed !== undefined && (
              <div className="grid grid-cols-3 gap-4 text-center">
                <div className="bg-green-100 p-3 rounded-lg">
                  <div className="text-2xl font-bold text-green-800">{results.processed}</div>
                  <div className="text-sm text-green-600 font-prompt">‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>
                </div>
                <div className="bg-red-100 p-3 rounded-lg">
                  <div className="text-2xl font-bold text-red-800">{results.failed}</div>
                  <div className="text-sm text-red-600 font-prompt">‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß</div>
                </div>
                <div className="bg-blue-100 p-3 rounded-lg">
                  <div className="text-2xl font-bold text-blue-800">{results.cleaned}</div>
                  <div className="text-sm text-blue-600 font-prompt">‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°</div>
                </div>
              </div>
            )}
          </div>
        )}

        {/* Information Section */}
        <div className="mt-8 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200">
          <h3 className="text-lg font-bold text-gray-900 mb-4 font-prompt">üí° ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h4 className="font-semibold text-gray-800 mb-2 font-prompt">‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á WebP:</h4>
              <ul className="text-sm text-gray-600 space-y-1 font-prompt">
                <li>üîπ ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏•‡πá‡∏Å‡∏Å‡∏ß‡πà‡∏≤ JPEG ‡∏ñ‡∏∂‡∏á 25-35%</li>
                <li>üîπ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™</li>
                <li>üîπ ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô</li>
                <li>üîπ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Google PageSpeed</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold text-gray-800 mb-2 font-prompt">‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á CLI:</h4>
              <div className="bg-gray-800 text-green-400 p-3 rounded text-xs font-mono">
                <div>pnpm process-images</div>
                <div>pnpm process-images:responsive</div>
                <div>pnpm cleanup-images</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default function ImageManagerPage() {
  return (
    <>
      <SEO
        title="‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û | ‡∏Ñ‡∏£‡∏π‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏£‡∏ñ‡∏™‡∏ß‡∏¢"
        description="‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô WebP ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î ‡∏™‡∏£‡πâ‡∏≤‡∏á responsive images ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á alt text"
        keywords="image optimization, webp conversion, responsive images, ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ß‡πá‡∏ö"
        url="/image-manager"
        type="website"
      />
      <main className="min-h-screen bg-gray-50 py-8">
        <ImageManager />
      </main>
    </>
  );
}
