/**
 * Enable Maintenance Mode API
 * ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
 */

import fs from 'fs';
import path from 'path';
import { isAuthenticated } from '../../../middleware/adminAuth';

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö authentication
  if (!isAuthenticated(req)) {
    return res.status(401).json({
      success: false,
      error: 'Unauthorized',
      message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ login ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á',
    });
  }

  try {
    const { reason, estimatedDuration, message } = req.body;
    const maintenanceFlagPath = path.join(process.cwd(), '.maintenance');

    const maintenanceData = {
      enabled: true,
      startedAt: new Date().toISOString(),
      reason: reason || '‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö',
      estimatedDuration: estimatedDuration || '1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á',
      message: message || '‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á',
      createdBy: 'admin',
    };

    // Create maintenance flag file
    fs.writeFileSync(maintenanceFlagPath, JSON.stringify(maintenanceData, null, 2));

    // Log activity
    try {
      const logsDir = path.join(process.cwd(), 'logs');
      const activityLogPath = path.join(logsDir, 'activity.log');

      if (!fs.existsSync(logsDir)) {
        fs.mkdirSync(logsDir, { recursive: true });
      }

      const logEntry = {
        timestamp: new Date().toISOString(),
        action: 'maintenance_enabled',
        user: 'admin',
        details: maintenanceData,
        ip: req.headers['x-forwarded-for'] || req.socket.remoteAddress,
      };

      fs.appendFileSync(activityLogPath, JSON.stringify(logEntry) + '\n');
    } catch (logError) {
      console.error('Failed to log maintenance activity:', logError);
    }

    res.status(200).json({
      success: true,
      maintenance: maintenanceData,
      message: 'Maintenance mode enabled successfully',
      instructions: [
        '‚úÖ ‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß',
        'üöß ‡∏ú‡∏π‡πâ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á',
        '‚ö†Ô∏è ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏á‡∏≤‡∏ô',
        'üìù ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö activity logs ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥',
      ],
    });
  } catch (error) {
    console.error('Enable maintenance error:', error);
    res.status(500).json({
      success: false,
      error: error.message,
      message: 'Failed to enable maintenance mode',
    });
  }
}
