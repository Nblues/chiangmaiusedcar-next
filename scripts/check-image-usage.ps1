# ====================================
# Image Usage Check Script (PowerShell)
# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô Next.js App
# ====================================

Write-Host "üñºÔ∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö..." -ForegroundColor Cyan
Write-Host "==================================================" -ForegroundColor White

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤ (.png, .jpg)
Write-Host ""
Write-Host "üìã 1. ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤ (.png, .jpg)" -ForegroundColor Yellow

# ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô .png ‡πÅ‡∏•‡∏∞ .jpg ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î
$oldImageUsage = Select-String -Path "pages\*.jsx", "components\*.jsx" -Pattern "\.(png|jpg|jpeg)" | Where-Object { $_.Line -notmatch "webp" -and $_.Line -notmatch "//.*\.(png|jpg|jpeg)" }

if ($oldImageUsage) {
    Write-Host "‚ö†Ô∏è ‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤:" -ForegroundColor Yellow
    foreach ($match in $oldImageUsage) {
        $file = Split-Path $match.Filename -Leaf
        $line = $match.LineNumber
        $content = $match.Line.Trim()
        Write-Host "   üìÑ $file (‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î $line): $content" -ForegroundColor Gray
    }
} else {
    Write-Host "‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î" -ForegroundColor Green
}

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô SmartImage
Write-Host ""
Write-Host "üîÑ 2. ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô SmartImage Component" -ForegroundColor Yellow

$smartImageUsage = Select-String -Path "pages\*.jsx", "components\*.jsx" -Pattern "SmartImage|ResponsiveCarImage"
if ($smartImageUsage) {
    Write-Host "‚úÖ ‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô SmartImage:" -ForegroundColor Green
    $smartImageCount = ($smartImageUsage | Group-Object Filename).Count
    Write-Host "   üìä ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô $smartImageCount ‡πÑ‡∏ü‡∏•‡πå" -ForegroundColor Cyan
    
    foreach ($group in ($smartImageUsage | Group-Object Filename)) {
        $file = Split-Path $group.Name -Leaf
        $count = $group.Count
        Write-Host "   üìÑ $file: $count ‡∏Ñ‡∏£‡∏±‡πâ‡∏á" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô SmartImage" -ForegroundColor Red
}

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö WebP conversion
Write-Host ""
Write-Host "üîÑ 3. ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô WebP" -ForegroundColor Yellow

$webpUsage = Select-String -Path "pages\*.jsx", "components\*.jsx" -Pattern "\.webp"
if ($webpUsage) {
    Write-Host "‚úÖ ‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WebP:" -ForegroundColor Green
    $webpCount = ($webpUsage | Measure-Object).Count
    Write-Host "   üìä ‡πÉ‡∏ä‡πâ WebP ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô $webpCount ‡∏Ñ‡∏£‡∏±‡πâ‡∏á" -ForegroundColor Cyan
} else {
    Write-Host "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WebP ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î" -ForegroundColor Yellow
}

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå public
Write-Host ""
Write-Host "üìÅ 4. ‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå public" -ForegroundColor Yellow

$publicImages = @{
    "PNG" = (Get-ChildItem "public\**\*.png" -Recurse -ErrorAction SilentlyContinue).Count
    "JPG" = (Get-ChildItem "public\**\*.jpg" -Recurse -ErrorAction SilentlyContinue).Count + (Get-ChildItem "public\**\*.jpeg" -Recurse -ErrorAction SilentlyContinue).Count
    "WebP" = (Get-ChildItem "public\**\*.webp" -Recurse -ErrorAction SilentlyContinue).Count
}

Write-Host "üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:" -ForegroundColor Cyan
foreach ($format in $publicImages.GetEnumerator()) {
    $color = if ($format.Key -eq "WebP") { "Green" } elseif ($format.Value -gt 0) { "Yellow" } else { "Gray" }
    Write-Host "   $($format.Key): $($format.Value) ‡πÑ‡∏ü‡∏•‡πå" -ForegroundColor $color
}

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Next.js Image Optimization
Write-Host ""
Write-Host "‚ö° 5. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Next.js Image Optimization" -ForegroundColor Yellow

if (Test-Path "next.config.js") {
    $nextConfig = Get-Content "next.config.js" -Raw
    
    if ($nextConfig -match "images.*domains|images.*remotePatterns") {
        Write-Host "‚úÖ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Image Optimization" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Image Optimization" -ForegroundColor Yellow
    }
    
    if ($nextConfig -match "formats.*webp") {
        Write-Host "‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WebP format" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô WebP format" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå next.config.js" -ForegroundColor Red
}

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ preload ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô _document.jsx
Write-Host ""
Write-Host "üöÄ 6. ‡∏Å‡∏≤‡∏£ Preload ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç" -ForegroundColor Yellow

if (Test-Path "pages\_document.jsx") {
    $documentContent = Get-Content "pages\_document.jsx" -Raw
    
    if ($documentContent -match "preload.*webp") {
        Write-Host "‚úÖ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£ preload ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û WebP" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£ preload ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û WebP" -ForegroundColor Yellow
    }
    
    $preloadCount = ([regex]::Matches($documentContent, "preload.*image")).Count
    Write-Host "üìä Preload ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: $preloadCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå _document.jsx" -ForegroundColor Red
}

# ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
Write-Host ""
Write-Host "==================================================" -ForegroundColor White
Write-Host "üìã ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥" -ForegroundColor Cyan
Write-Host "==================================================" -ForegroundColor White

Write-Host ""
Write-Host "‚úÖ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß:" -ForegroundColor Green
Write-Host "   - ‡πÉ‡∏ä‡πâ SmartImage component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á WebP ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥" -ForegroundColor White
Write-Host "   - ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö fallback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ" -ForegroundColor White
Write-Host "   - ‡πÉ‡∏ä‡πâ Next.js Image optimization" -ForegroundColor White

Write-Host ""
Write-Host "üîß ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:" -ForegroundColor Yellow

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Image component ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
$oldImageComponent = Select-String -Path "pages\*.jsx", "components\*.jsx" -Pattern "import.*Image.*next/image|<Image" | Where-Object { $_.Line -notmatch "SmartImage" }
if ($oldImageComponent) {
    Write-Host "   - ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Image component ‡∏î‡πâ‡∏ß‡∏¢ SmartImage ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ" -ForegroundColor White
}

if ($publicImages["PNG"] + $publicImages["JPG"] -gt $publicImages["WebP"]) {
    Write-Host "   - ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û PNG/JPG ‡πÄ‡∏õ‡πá‡∏ô WebP ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°" -ForegroundColor White
}

Write-Host ""
Write-Host "üöÄ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ:" -ForegroundColor Magenta
Write-Host "   1. ‡πÉ‡∏ä‡πâ SmartImage ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û" -ForegroundColor White
Write-Host "   2. ‡πÄ‡∏û‡∏¥‡πà‡∏° responsive breakpoints ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö mobile" -ForegroundColor White
Write-Host "   3. ‡πÉ‡∏ä‡πâ lazy loading ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç" -ForegroundColor White
Write-Host "   4. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û WebP ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö admin" -ForegroundColor White

Write-Host ""
Write-Host "‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!" -ForegroundColor Green
