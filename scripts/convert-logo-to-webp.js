/**
 * ‡πÅ‡∏õ‡∏•‡∏á logo_main.png ‡πÄ‡∏õ‡πá‡∏ô WebP ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß LCP
 * ‡πÉ‡∏ä‡πâ sharp library ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
 */

const sharp = require('sharp');
const path = require('path');
const fs = require('fs');

async function convertLogoToWebP() {
  const inputPath = path.join(__dirname, '../public/logo/logo_main.png');
  const outputPath = path.join(__dirname, '../public/logo/logo_main.webp');

  try {
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á logo_main.png ‡πÄ‡∏õ‡πá‡∏ô WebP...\n');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    if (!fs.existsSync(inputPath)) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå logo_main.png');
      process.exit(1);
    }

    // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
    const originalStats = fs.statSync(inputPath);
    const originalSizeKB = (originalStats.size / 1024).toFixed(2);

    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô WebP ‡∏î‡πâ‡∏ß‡∏¢ quality 85 (balance ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î)
    await sharp(inputPath).webp({ quality: 85, effort: 6 }).toFile(outputPath);

    // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà
    const webpStats = fs.statSync(outputPath);
    const webpSizeKB = (webpStats.size / 1024).toFixed(2);
    const savedKB = (originalSizeKB - webpSizeKB).toFixed(2);
    const savedPercent = ((savedKB / originalSizeKB) * 100).toFixed(1);

    console.log('‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n');
    console.log('üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:');
    console.log(`   PNG:  ${originalSizeKB} KB`);
    console.log(`   WebP: ${webpSizeKB} KB`);
    console.log(`   ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î: ${savedKB} KB (${savedPercent}%)\n`);
    console.log('üìÅ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:');
    console.log(`   ${outputPath}\n`);
    console.log('üéØ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:');
    console.log('   1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå logo_main.webp');
    console.log('   2. ‡πÅ‡∏Å‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ <picture> tag ‡∏û‡∏£‡πâ‡∏≠‡∏° fallback');
    console.log('   3. ‡πÑ‡∏ü‡∏•‡πå .png ‡πÄ‡∏î‡∏¥‡∏°‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠ backward compatibility\n');
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    process.exit(1);
  }
}

// ‡∏£‡∏±‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
convertLogoToWebP();
