name: Auto Re-scrape Facebook OG Cache

# Trigger ‡πÄ‡∏°‡∏∑‡πà‡∏≠ deploy ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
on:
  # ‡πÄ‡∏°‡∏∑‡πà‡∏≠ push ‡πÑ‡∏õ master (‡∏´‡∏•‡∏±‡∏á deploy)
  push:
    branches:
      - master
    paths:
      - 'pages/**'
      - 'components/**'
      - 'lib/**'
      - 'public/**'
      - 'next.config.js'

  # ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ manual
  workflow_dispatch:
    inputs:
      limit:
        description: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏à‡∏∞ re-scrape (‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)'
        required: false
        default: ''

jobs:
  rescrape:
    name: Re-scrape Facebook OG Preview
    runs-on: ubuntu-latest

    steps:
      - name: Wait for Vercel Deployment
        run: |
          echo "‚è≥ ‡∏£‡∏≠ Vercel deploy ‡πÄ‡∏™‡∏£‡πá‡∏à..."
          sleep 60

      - name: Health Check
        run: |
          echo "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô..."
          for i in {1..5}; do
            if curl -s -o /dev/null -w "%{http_code}" https://www.chiangmaiusedcar.com/ | grep -q "200"; then
              echo "‚úÖ ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
              break
            fi
            echo "‚è≥ ‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà $i - ‡∏£‡∏≠ 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ..."
            sleep 10
          done

      - name: Re-scrape Facebook Cache
        env:
          RESCRAPE_SECRET: ${{ secrets.RESCRAPE_SECRET }}
          SITE_URL: https://www.chiangmaiusedcar.com
        run: |
          echo "üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏° re-scrape Facebook OG cache..."

          # ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API
          API_URL="${SITE_URL}/api/social/rescrape?secret=${RESCRAPE_SECRET}"

          # ‡πÄ‡∏û‡∏¥‡πà‡∏° limit ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏
          if [ -n "${{ github.event.inputs.limit }}" ]; then
            API_URL="${API_URL}&limit=${{ github.event.inputs.limit }}"
            echo "üìä Re-scrape ‡∏£‡∏ñ ${{ github.event.inputs.limit }} ‡∏Ñ‡∏±‡∏ô‡πÅ‡∏£‡∏Å"
          else
            echo "üìä Re-scrape ‡∏£‡∏ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
          fi

          # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
          RESPONSE=$(curl -s -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            -w "\n%{http_code}")

          # ‡πÅ‡∏¢‡∏Å body ‡∏Å‡∏±‡∏ö status code
          HTTP_BODY=$(echo "$RESPONSE" | head -n -1)
          HTTP_CODE=$(echo "$RESPONSE" | tail -n 1)

          # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
          if [ "$HTTP_CODE" = "200" ]; then
            echo "‚úÖ Re-scrape ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
            echo "$HTTP_BODY" | jq '.'
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
            COUNT=$(echo "$HTTP_BODY" | jq -r '.count // 0')
            echo "üìà ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß: $COUNT URLs"
          else
            echo "‚ùå Re-scrape ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (HTTP $HTTP_CODE)"
            echo "$HTTP_BODY"
            exit 1
          fi

      - name: Notify Success
        if: success()
        run: |
          echo "üéâ Facebook OG cache ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ refresh ‡πÅ‡∏•‡πâ‡∏ß!"
          echo "üîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: https://developers.facebook.com/tools/debug/"
